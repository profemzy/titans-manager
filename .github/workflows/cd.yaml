name: Continuous Deployment

on:
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  deploy:
    # Only run if PR was merged (not just closed) and it was merged into master
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    runs-on: ubuntu-latest
    environment: wackops

    steps:
    - uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push image to ACR
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:${{ github.sha }} .
        docker tag ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:latest
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:${{ github.sha }}
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:latest

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: Create namespace if not exists
      run: |
        kubectl create namespace wackops --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to AKS
      run: |
        # Update image tag in deployment yaml
        sed -i "s|image:.*|image: ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:${{ github.sha }}|" kubernetes/deployment.yaml
        
        # Apply K8s configurations
        kubectl apply -f kubernetes/configmap.yaml 
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml 
        kubectl apply -f kubernetes/ingress.yaml
        kubectl apply -f kubernetes/hpa.yaml
        
        # Wait for deployment to complete
        kubectl rollout status deployment/titans-manager -n wackops

    - name: Verify Deployment
      run: |
        kubectl get deployment titans-manager -n wackops
        kubectl get pods -l app=titans-manager -n wackops
        kubectl get svc titans-manager -n wackops
