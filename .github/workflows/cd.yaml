name: Continuous Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  deploy-production:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: wackops

    steps:
    - uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Setup kubectl and kubelogin
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        curl -LO https://github.com/Azure/kubelogin/releases/latest/download/kubelogin-linux-amd64.zip
        unzip kubelogin-linux-amd64.zip
        sudo install -o root -g root -m 0755 bin/linux_amd64/kubelogin /usr/local/bin/kubelogin

    - name: Create namespace if not exists
      run: |
        kubectl create namespace wackops --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to AKS
      run: |
        # Update image tag in deployment yaml
        sed -i "s|image:.*|image: ${{ secrets.ACR_LOGIN_SERVER }}/titans-manager:${{ github.sha }}|" kubernetes/deployment.yaml
        
        # Apply K8s configurations with namespace
        kubectl apply -f kubernetes/configmap.yaml -n wackops
        kubectl apply -f kubernetes/deployment.yaml -n wackops
        kubectl apply -f kubernetes/service.yaml -n wackops
        kubectl apply -f kubernetes/ingress.yaml -n wackops
        kubectl apply -f kubernetes/hpa.yaml -n wackops
        
        # Wait for deployment to complete
        kubectl rollout status deployment/tms-app -n wackops

    - name: Verify Deployment
      run: |
        echo "Checking deployment status..."
        kubectl rollout status deployment/tms-app -n wackops
        
        echo "Checking pod status..."
        kubectl get pods -l app=tms-app -n wackops
        
        echo "Checking service status..."
        kubectl get svc tms-app -n wackops
        
        echo "Checking HPA status..."
        kubectl get tms-app-hpa -n wackops